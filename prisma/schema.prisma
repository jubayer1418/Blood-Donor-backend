datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")

}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String       @id @default(uuid())
  name                  String       @unique
  email                 String       @unique
  password              String
  status                Status?      @default(ACTIVATE)
  bloodType             BloodType?
  location              String?
  role                  Role?        @default(USER)
  canDonateBlood        Boolean      @default(false)
  availability          Boolean      @default(true)
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
  bloodRequestsReceived Request[]    @relation("requestsReceived")
  bloodRequestsMade     Request[]    @relation("requestsMade")
  userProfile           UserProfile?

  @@map("users")
}

model UserProfile {
  id               String   @id @default(uuid())
  userId           String   @unique
  bio              String?
  age              Int?
  lastDonationDate String?
  photoUrl         String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userId], references: [id])

  @@map("userProfile")
}

model Request {
  id              String        @id @default(uuid())
  requesterId     String
  donorId         String
  requestStatus   RequestStatus @default(PENDING)
  phoneNumber     String
  dateOfDonation  String
  hospitalName    String?
  hospitalAddress String
  reason          String?
  time            String?
  additionalInfo  String?
  termsAgreed     Boolean?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  donor           User          @relation("requestsReceived", fields: [donorId], references: [id])
  requester       User          @relation("requestsMade", fields: [requesterId], references: [id])

  @@map("request")
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

enum BloodType {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}

enum Role {
  ADMIN
  USER
}

enum Status {
  ACTIVATE
  DEACTIVATE
}
